/**********************************************************************
 *  readme template
 *  Global Sequence Alignment
 **********************************************************************/

Name: Lam Nguyen

Hours to complete assignment (optional):

/**********************************************************************
 *  Describe any serious problems you encountered.                    
 **********************************************************************/


/**********************************************************************
 *  Make a table of values showing running times for the method
 *  recursiveEditDistance when given two random DNA strings of length
 *  N, where N from 1 to about 10 or 12.  To do this properly, it would
 *  be best to repeat the test several times for each value of N, and
 *  average the times.
 *
 *  What can you say about the growth of this time as a function of N?
 *  
 **********************************************************************/
		String1Length          String2Length         Time
		      1                      2
		      3                      2
		      4                      2
		      6                      3
		      7                      4
/**********************************************************************
 *  For each data file, fill in the edit distance computed by your
 *  program and the amount of time it takes to compute it.
 **********************************************************************/

data file           distance       time (seconds)
-------------------------------------------------
ecoli3000.txt
ecoli5000.txt
ecoli7000.txt
ecoli10000.txt


/**********************************************************************
 *  Because the dynamic programming version does a fixed amount of
 *  computation for each element in the two-dimensional table,
 *  we expect that the time complexity should be quadratic.  Does the
 *  data above seem to support this hypothesis?   Use the doubling
 *  hypothesis to explain how you arrived at your answer.
 **********************************************************************/



/**********************************************************************
 *  As a function of the string length N (assume M = N), estimate the
 *  running time of your program (and the sample) in seconds. Your answer
 *  should have the form a * N^2 for some constant a.
 *
 *  What is the largest N your program can handle if it is limited to 1
 *  day of computation? Assume you have as much main memory as you need.
 **********************************************************************/

a = 
largest N = 




/**********************************************************************
 *  List whatever help (if any) that you received. You don't need to
 *  include the course materials or lectures, but do include any
 *  additional help your received from people other than course staff,
 *  and include their names.
 **********************************************************************/


/**********************************************************************
 *  List any other comments here.                                     
 **********************************************************************/