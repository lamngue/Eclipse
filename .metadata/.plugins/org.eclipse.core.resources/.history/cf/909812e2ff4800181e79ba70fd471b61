import java.util.Random;

public class GuitarString {

    private RingBuffer buffer; // ring buffer
    // YOUR OTHER INSTANCE VARIABLES HERE
    private int samplingRate = 44100;
    private double decayFactor = 0.994;
    private int ticCalled = 0;
    
    // create a guitar string of the given frequency
    public GuitarString(double frequency) {
        // YOUR CODE HERE
    	int N = (int) Math.round(samplingRate/frequency);
    	buffer = new RingBuffer(N);
    	for(int i = 0;i<N;i++) {
    		buffer.dequeue();
    		buffer.enqueue(0);
    	}
    }

    // create a guitar string with size & initial values given by the array
    public GuitarString(double[] init) {
        // YOUR CODE HERE
    	buffer = new RingBuffer(init.length);
    	for(int i = 0;i< init.length;i++) {
    		buffer.enqueue(init[i]);
    	}
    }

    // pluck the guitar string by replacing the buffer with white noise
    public void pluck() {
        for(int i = 0;i<buffer.size();i++) {
        	// eliminate N items in the buffer and then replace with values
        	// between -0.5 and 0.5
        	buffer.dequeue();
        	buffer.enqueue(Math.random() - 0.5);
        }
    }
    
    // advance the simulation one time step
    public void tic() {
    	double first = buffer.dequeue();
    	double second = buffer.peek();
    	buffer.enqueue((first+second)*decayFactor);
    	ticCalled++;
    }

    // return the current sample
    public double sample() {
        return buffer.peek(); 
    }

    // return number of times tic() was called
    public int time() {
        return ticCalled;
    }

    public static void main(String[] args) {
        int N = Integer.parseInt(args[0]);
        double[] samples = { .2, .4, .5, .3, -.2, .4, .3, .0, -.1, -.3 };  
        GuitarString testString = new GuitarString(samples);
        for (int i = 0; i < N; i++) {
            int t = testString.time();
            double sample = testString.sample();
            System.out.printf("%6d %8.4f\n", t, sample);
            testString.tic();
        }
    }

}
